version: '3'
services:
  backend:
    build:
        context: .
        dockerfile: ops/Dockerfile
    image: backend
    container_name: backend
    ports:
        - 5000:5000
    environment:
        DATABASE_URI: "postgresql://postgres:${DATABASE_PASSWORD}@postgres/postgres_pcitvr"
        DATABASE_PASSWORD: ${DATABASE_PASSWORD}
        ASSET_DIR: "/app/app/static/assets/"
        JWT_SECRET_KEY: ${JWT_SECRET_KEY}
        FLASK_APP: app.app
        PYTHONUNBUFFERED: 1
        DEBUG: 1
    volumes:
        - ./:/app
        - ./assets/:/app/app/static/assets/

    command: bash -c "/entrypoint.sh"
    depends_on: 
        - postgres
        - redis
  
  worker:
    image: backend
    command: python app/worker.py
    volumes:
      - ./:/app
    environment:
      REDIS_URL: "redis://redis:6379/0"
      QUEUES: "high,default,low"
    depends_on:
      - redis
      - backend

  redis:
    image: redis:alpine

  redis-dashboard:
    build: ./ops/dashboard
    image: dashboard
    container_name: dashboard
    ports:
      - 9181:9181
    command: rq-dashboard -H redis
    depends_on:
      - redis

  postgres:
    image: postgres:12
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
        - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
        - POSTGRES_USER=postgres
        - POSTGRES_DB=postgres_pcitvr
    restart: unless-stopped

  adminer:
    image: adminer
    restart: unless-stopped
    depends_on: 
      - postgres
    ports:
      - 8080:8080

  nginx:
    image: nginx
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./ops/Dockerfile.nginx
    depends_on:
      - backend
    volumes:
      - ./ops/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./assets/:/static/:ro
    ports:
      - 80:80
      
volumes:
  postgres:
