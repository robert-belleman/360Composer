FROM node:16 as build

ARG BASEPATH=/app
ENV BASEPATH=$BASEPATH

COPY /scene-editor/frontend/package.json /app/scene-editor-frontend/package.json
# Als er al lokcaal een package-lock.json bestaat, dan wordt deze gebruikt.
RUN if [ -f /scene-editor /frontend /package-lock.json ]; then \
    COPY /scene-editor/frontend/package-lock.json /app/scene-editor-frontend/package-lock.json; \
    fi

WORKDIR /app/scene-editor-frontend

# npm doet soms nogal raar. Daarom even deze cache clean en config rm.
RUN npm cache clean --force && npm config rm proxy && npm config rm https-proxy && npm cache verify
RUN if [ -f package-lock.json ]; then \
    npm ci; \
    else \
    npm install --legacy-peer-deps; \
    fi

COPY /scene-editor/frontend/src /app/scene-editor-frontend/src
COPY /scene-editor/frontend/public /app/scene-editor-frontend/public
COPY /scene-editor/frontend/tsconfig.json /app/scene-editor-frontend/tsconfig.json
RUN npm run build

FROM nginx:alpine as production

WORKDIR /app
RUN apk add python3 python3-dev py3-pip build-base libressl-dev musl-dev libffi-dev
RUN pip3 install pip --upgrade
RUN pip3 install certbot-nginx
RUN mkdir /etc/letsencrypt
RUN mkdir /static/
COPY --from=build /app/scene-editor-frontend/build ./scene-editor-frontend