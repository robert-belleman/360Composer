version: '3'
name: vr_app
services:

  backend: # port 5000
    build:
        context: ./scene-editor/backend
        dockerfile: ops/Dockerfile
    image: backend
    container_name: backend
    environment:
        DATABASE_URI: "postgresql://postgres:${DATABASE_PASSWORD}@postgres/postgres_pcitvr"
        DATABASE_PASSWORD: ${DATABASE_PASSWORD}
        ASSET_DIR: "/app/app/static/assets/"
        JWT_SECRET_KEY: ${JWT_SECRET_KEY}
        FLASK_APP: app.app
        PYTHONUNBUFFERED: 1
        DEBUG: 1
    volumes:
        - ./scene-editor/backend/:/app
        - ./scene-editor/backend/assets/:/app/app/static/assets/

    command: bash -c "/entrypoint.sh"
    depends_on:
        - postgres
        - redis

  worker:
    image: backend
    container_name: redis-worker
    command: python app/worker.py
    volumes:
      - ./scene-editor/backend/:/app
    environment:
      REDIS_URL: "redis://redis:6379/0"
      QUEUES: "high,default,low"
    depends_on:
      - redis
      - backend

  redis:
    image: redis:alpine
    container_name: redis

  # redis-dashboard:
  #   build: ./ops/dashboard
  #   image: redis-dashboard
  #   container_name: redis-dashboard
  #   ports:
  #     - 9181:9181
  #   command: rq-dashboard -H redis
  #   depends_on:
  #     - redis

  postgres:
    image: postgres:12
    container_name: postgres-db
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
        - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
        - POSTGRES_USER=postgres
        - POSTGRES_DB=postgres_pcitvr
    ports:
      - 5433:5432

# Geen idee waar deze voor is dus nu even gecomment - 18nov22_rico
  adminer:
    image: adminer
    depends_on:
      - postgres
    ports:
      - 8081:8081

  nginx:
    container_name: nginx-server
    image: nginx
    depends_on:
      - backend
      - frontend
    volumes:
      - ./ops/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./scene-editor/backend/assets/:/static/:ro
    ports:
      - 8080:8080

  frontend: # port 3000
    build:
      context: .
      dockerfile: ./ops/Dockerfile.frontend-dev
      args:
        BASEPATH: "/app"

volumes:
  postgres:
